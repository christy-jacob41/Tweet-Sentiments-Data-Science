## ----  results="hide"----------------------------------------------------
require("datasets")
data("iris") # load Iris Dataset
str(iris) #view structure of dataset

## ----  results="hide"----------------------------------------------------
iris.new<- iris[,c(1,2,3,4)]
iris.class<- iris[,"Species"]

## ----  results="hide"----------------------------------------------------
normalize <- function(x){
  return ((x-min(x))/(max(x)-min(x)))
}

iris.new$Sepal.Length<- normalize(iris.new$Sepal.Length)
iris.new$Sepal.Width<- normalize(iris.new$Sepal.Width)
iris.new$Petal.Length<- normalize(iris.new$Petal.Length)
iris.new$Petal.Width<- normalize(iris.new$Petal.Width)
head(iris.new)

## ----  message=FALSE-----------------------------------------------------
result<- kmeans(iris.new,3) 
result$size # gives no. of records in each cluster
result$centers

## ----  message=FALSE-----------------------------------------------------
result<- kmeans(iris.new,3) 
result$size # gives no. of records in each cluster
result$centers



## ---- message=FALSE, echo= FALSE-----------------------------------------
par(mfrow=c(2,2), mar=c(5,4,2,2))
plot(iris.new[c(1,2)], col=result$cluster)
plot(iris.new[c(1,2)], col=iris.class)
plot(iris.new[c(3,4)], col=result$cluster)
plot(iris.new[c(3,4)], col=iris.class)

## ----  results="hide"----------------------------------------------------
data(wine, package='rattle')
head(wine)
wine.stand <- scale(wine[-1])  # To standarize 
# K-Means
k.means.fit <- kmeans(wine.stand, 3) # k = 3

## ----  results="hide"----------------------------------------------------
k.means.fit$cluster
k.means.fit$size

## ---- results="hide", message=FALSE, fig.keep=FALSE----------------------
wssplot <- function(data, nc=15, seed=1234){
  wss <- (nrow(data)-1)*sum(apply(data,2,var))
  for (i in 2:nc){
    set.seed(seed)
    wss[i] <- sum(kmeans(data, centers=i)$withinss)}
  plot(1:nc, wss, type="b", xlab="Number of Clusters",
       ylab="Within groups sum of squares")}


## ---- echo=FALSE---------------------------------------------------------
wssplot <- function(data, nc=15, seed=1234){
  wss <- (nrow(data)-1)*sum(apply(data,2,var))
  for (i in 2:nc){
    set.seed(seed)
    wss[i] <- sum(kmeans(data, centers=i)$withinss)}
  plot(1:nc, wss, type="b", xlab="Number of Clusters",
       ylab="Within groups sum of squares")}

wssplot(wine.stand, nc=6) 



## ---- echo=FALSE---------------------------------------------------------
require(cluster)
silhouette_score <- function(k){
  km <- kmeans(wine.stand, centers = k, nstart=25)
  ss <- silhouette(km$cluster, dist(wine.stand))
  mean(ss[, 3])
}
k <- 2:10
avg_sil <- sapply(k, silhouette_score)
plot(k, type='b', avg_sil, xlab='Number of clusters', 
     ylab='Average Silhouette Scores', frame=FALSE)


## ---- message= FALSE, echo=FALSE, eval=TRUE, message = FALSE, warning=FALSE----
require(jpeg)
require(RCurl)
url <-"https://raw.githubusercontent.com/mages/diesunddas/"
url <- paste(url, "master/Blog/LloydsBuilding.jpg", sep="")
readImage <- readJPEG(getURLContent(url, binary=TRUE))
dm <- dim(readImage)
rgbImage <- data.frame(
                    x=rep(1:dm[2], each=dm[1]),
                    y=rep(dm[1]:1, dm[2]),
                    r.value=as.vector(readImage[,,1]),
                    g.value=as.vector(readImage[,,2]),
                    b.value=as.vector(readImage[,,3]))

plot(y ~ x, data=rgbImage, main="Lloyd building",
     col = rgb(rgbImage[c("r.value", "g.value", "b.value")]), 
     asp = 1, pch = ".")




## ---- message= FALSE, echo=FALSE, eval=TRUE, message = FALSE, warning=FALSE----
kColors <- 5  
kMeans <- kmeans(rgbImage[, c("r.value", "g.value", "b.value")], 
                 centers = kColors)
clusterColour <- rgb(kMeans$centers[kMeans$cluster, ])

plot(y ~ x, data=rgbImage, main="Lloyd building",
     col = clusterColour, asp = 1, pch = ".",
     axes=FALSE, ylab="", 
     xlab="k-means cluster analysis of 5 colours")

